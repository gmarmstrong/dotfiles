# tab-completion
autoload -Uz compinit && compinit

# promt with name of git branch
# https://git-scm.com/book/en/v2/Appendix-A%3A-Git-in-Other-Environments-Git-in-Zsh
autoload -Uz vcs_info
precmd_vcs_info() { vcs_info }
precmd_functions+=( precmd_vcs_info )
setopt prompt_subst
RPROMPT='${vcs_info_msg_0_}'
# PROMPT='${vcs_info_msg_0_}%# '
zstyle ':vcs_info:git:*' formats '%b'

# environment variables
export EDITOR=vim

# aliases
if command -v gls > /dev/null; then
    alias l="LC_COLLATE=C gls --group-directories-first -FHAlh -w 80"
    alias ll="LC_COLLATE=C gls --group-directories-first -FHA -w 80"
    alias ls="LC_COLLATE=C gls --group-directories-first -FH -w 80"
fi

bindkey -v                                  # vi-mode
bindkey jk vi-cmd-mode                      # bind jk to normal mode
bindkey -M viins '^?' backward-delete-char  # allow deleting beyond initial character

if [[ -e "$HOME/.zsh-history-substring-search.zsh" ]]; then
    source "$HOME/.zsh-history-substring-search.zsh"    # history substring search
    HISTORY_SUBSTRING_SEARCH_PREFIXED=true              # anchor search to command beginning
    bindkey -M vicmd 'k' history-substring-search-up    # up with k in normal mode
    bindkey -M vicmd 'j' history-substring-search-down  # down with j in normal mode
fi

if [[ $(uname) == "Darwin" ]]; then # macOS-specific settings
    PATH="${HOME}/Library/Python/3.10/bin:$PATH"
    # iTerm shell integration
    test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"
    # case-insensitive tab completion
    zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'
    # pman to view pretty man pages in Preview.app
    pman() { man -t "$@" | open -f -a Preview; }
fi

export GPG_TTY=$(tty)
