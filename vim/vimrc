" ==============================================================================
" VIM

set undodir=$HOME/.cache/vim/undo
set directory=$HOME/.cache/vim/swap
set backupdir=$HOME/.cache/vim/backup
set viminfo+='1000,n$HOME/.cache/vim/viminfo
set runtimepath=$HOME/.config/vim,$HOME/.config/vim/after,$HOME/.local/share/vim,$VIMRUNTIME

" ==============================================================================
" FUNCTIONS

" Highlight columns exceeding 80
function ColumnWarning() abort
    highlight OverLength ctermbg=red ctermfg=white
    match OverLength /\%81v.\+/
endfunction

" Compile Markdown to HTML and open
function BrowserMarkdown() abort
    " FIXME Does not work with files with spaces
    !pandoc -s -f markdown -t html % -o %:r.html
    !firefox %:r.html
endfunction

" ==============================================================================
" FILETYPE DETECTION

set modeline

" ==============================================================================
" INTERFACE

setlocal ruler                  "Display line/column number, position, etc.
setlocal nonumber               "Show line numbers
set shortmess=I                 "Disable startup message
set shortmess+=W                "Disable write message
set shortmess+=a                "Disable <Enter> message
set cmdheight=2                 "Avoid hit-enter prompts
set showmode                    "Show current mode in bottom window
let g:netrw_banner = 0          "Hide banner in file browser

" ==============================================================================
" INPUT

" Map jk to escape
inoremap jk <esc>

set backspace=indent,eol,start  "Allow backspace in insert mode

" ==============================================================================
" DICTIONARY

nnoremap <silent> <Leader>d :!dict <cword> \| less <CR>

" ==============================================================================
" PLUGINS

" Plugins
call plug#begin('$HOME/.local/share/vim/plugged')       "Note the single quotes
Plug 'jamessan/vim-gnupg'               "Edit encrypted files
Plug 'lervag/vimtex'                    "LaTeX support
Plug 'godlygeek/tabular'                "Markdown dependency
Plug 'gabrielelana/vim-markdown'        "Markdown support
Plug 'airblade/vim-gitgutter'           "Git diff in the gutter
Plug 'chriskempson/base16-vim'          "Colorschemes
call plug#end()

" vim-gitgutter settings
let g:gitgutter_override_sign_column_highlight = 0
if exists('&signcolumn')
    set signcolumn=yes
else
    let g:gitgutter_sign_column_always = 1
endif

" vimtex settings
let g:vimtex_compiler_latexmk = {'callback' : 0}

" base16 settings
if $TERM =~ ".*256color"
    let base16colorspace=256                    "Access 256 colorspace
endif

" ==============================================================================
" DISPLAY

" Reload changed files
set autoread

" Show whitespace
set list
set list listchars=tab:»·,trail:␣

" Color
colorscheme base16-default-dark
highlight VertSplit ctermbg=lightgrey ctermfg=lightgrey
highlight StatusLine ctermbg=lightgrey ctermfg=lightgrey
highlight StatusLineNC ctermbg=lightgrey ctermfg=lightgrey

" ==============================================================================
" INDENTATION

set autoindent          "Open (o and O) lines with appropriate indentation
set smartindent         "Be smart
set smarttab            "Be smart
set shiftwidth=4        "Set width of reindent operations (<< and >>)
set tabstop=4           "Tab characters appear 4 spaces wide
set expandtab           "Insert spaces instead of tabs
set breakindent         "Indent wrapped lines

" ==============================================================================
" WRAPPING

set wrap            "Enable wrapping
set textwidth=0     "Column after which to break
set linebreak       "Wrap at column, not at border
set wrapmargin=0    "Distance from the window border to wrap

" ==============================================================================
" PYTHON

" Map F5 to execute
autocmd FileType python map <F5> :!./%<CR>

" 80+ column warning
autocmd FileType python call ColumnWarning()

" ==============================================================================
" HASKELL

" Map F5 to compile
autocmd FileType haskell map <F5> :!ghci %<CR>

" ==============================================================================
" SHELL

" Map F5 to execute
autocmd FileType sh,zsh map <F5> :!./%<CR>

" ==============================================================================
" PASS

" https://lists.zx2c4.com/pipermail/password-store/2017-November/003122.html
augroup passconceal
    autocmd!

    " Create the second line if it does not already exist
    autocmd BufNewFile,BufRead */pass.*/* if line('$') == 1 | $put _ | endif

    " Jump to the second line
    autocmd BufNewFile,BufRead */pass.*/* 2

    " Conceal the first line with a unicode character
    autocmd BufNewFile,BufRead */pass.*/* syntax match Concealed '\%1l.*' conceal cchar=⚠️
    autocmd BufNewFile,BufRead */pass.*/* setlocal conceallevel=1

augroup END

" ==============================================================================
" PROSE

" Disable line numbers
autocmd FileType latex,markdown,text,rst,html setlocal nonumber

" Map F5 to toggle spell checking
autocmd FileType latex,markdown,rst,html setlocal spell spelllang=en_us
autocmd FileType latex,markdown,text,rst,html map <F5> :setlocal spell! spelllang=en_us<CR>

" Map F6 to open
autocmd FileType html map <F6> :!firefox % <CR>
autocmd FileType rst map <F6> :!rst2html.py % '%:r'.html<CR>
autocmd FileType markdown map <F6> :call BrowserMarkdown()<CR><CR><CR>
